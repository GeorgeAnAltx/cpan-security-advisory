#!/Users/brian/bin/perl
use v5.34;
use utf8;
use open qw(:std :utf8);

use FindBin;
use lib "$FindBin::Bin/../lib";

use Local::CPANSA;

use Mojo::URL;
use Mojo::Util qw(dumper);

my $search_url = Mojo::URL->new("https://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=perl");

my $map_sub = sub {
		state $header = 1;
		if( $header ) { $header = 0; return () }
		my $dom = $_;

		my $array = $dom->find( 'td' )->map( sub {
			my $text =  $_->all_text;
			$text =~ s/\v+/ /gr;
			} )->to_array;

		my $url = eval { $dom->at( 'td > a' )->attr('href') };

		my $hash = {
			cve         => $array->[0],
			description => $array->[1],
			url         => $url,
			};

		$hash->{record} = Local::CPANSA::assemble_record( $hash->{cve} );

		$hash;
		};

use XML::Feed;
use constant FEED_FORMAT => 'Atom';
my $feed = XML::Feed->new(FEED_FORMAT);
$feed->author();
$feed->link();
$feed->base('https://cve.mitre.org/');
$feed->description( 'CVEs related to perl' );

use Mojo::UserAgent;
my $items = Mojo::UserAgent
	->new->get($search_url)
	->res
	->dom->find( 'div#TableWithRules table tr' )
	->head(25)
	->map( $map_sub )
	->grep( sub { length $_->{cve} } ) # first is a header row
	->grep( sub { ! Local::CPANSA::cve_recorded( $_->{cve} ) } )
	->grep( sub { ! Local::CPANSA::cve_ignored( $_->{cve} ) } )
	->map( sub {
		return if Local::CPANSA::cve_recorded( $_->{cve} );
		my $entry = XML::Feed::Entry->new(FEED_FORMAT);
		$entry->title( $_->{cve} );
		$entry->id( $_->{cve} );
		$entry->link( Mojo::URL->new($_->{url})->to_abs($search_url)->to_string );
		$entry->content( $_->{description} );
		$entry
		} )
	->to_array
	;

$feed->add_entry( $_ ) for $items->@*;

say $feed->as_xml;
