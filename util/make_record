#!/usr/bin/env perl
use v5.10;
use strict;
use experimental qw(signatures);

=head1 NAME

make_record - turn a CVE into a CPANSA YAML object

=head1 SYNOPSIS

Give this program a CVE ID and see what it does. It guesses the CPAN
module name, so you need to check that:

Try it with just the CVE:

	$ perl util/make_record CVE-2011-4117
	---
	- affected_versions: ~
	  cves:
		- CVE-2011-4117
	  description: The Batch::BatchRun module 1.03 for Perl does not properly handle temporary files.
	  distribution: Batch-BatchRun
	  fixed_versions: ~
	  id: CPANSA-Batch-BatchRun-2011-4117
	  references:
		- http://www.openwall.com/lists/oss-security/2011/11/04/2
		- http://www.openwall.com/lists/oss-security/2011/11/04/4
		- https://rt.cpan.org/Public/Bug/Display.html?id=69594
	  reported: 2020-01-31
	  severity: high

Sometimes it can't guess the package, so run it again with what you see
in the record:

	$ perl util/make_record CVE-2011-4117 Some-Package

If a report file already exists (F<cpansa/CPANSA-Some-Package.yml>), or
you specify C<-S>, the output omits the YAML header (C<--->) so you can
append to the YAML array that is already there:

	$ perl util/make_record CVE-2011-4117 Some-Package > cpansa/CPANSA-Some-Package.yml
	$ perl util/make_record -S CVE-2011-4117 Some-Package

If the report file already exists, it sets C<-S> for you, but you can
force that header with C<-s> (which always wins):

	$ perl util/make_record -s CVE-2011-4117 Some-Package

=cut

use FindBin;
use lib "$FindBin::Bin/../lib";

use Local::CPANSA;
use YAML qw(Dump);

use Getopt::Long qw(:config no_ignore_case);
GetOptions (
	"S" => \my $no_yaml_start,
	"s" => \my $yes_yaml_start,
	);

my( $cve, $package ) = @ARGV;

my $hash = Local::CPANSA::assemble_record( $cve, $package );
my $string = Dump( [ $hash ] );

# We want the folded form to avoid yamllint warnings, but YAML
# no longer supports this. We can cheat a little because we know
# exactly where this shows up and we don't have to handle arbitrary
# data structures
$string =~ s/^(\x20\x20description:\s+)(.*)/
    state $rc = require Text::Format;
	my( $field, $value ) = @{^CAPTURE};
	my $wrapped = Text::Format->new({columns => 70})->format($value);
	$wrapped =~ s{\A\s+|\s+\z}{}g;
	$wrapped =~ s|^|    |gm;
	"$field>\n$wrapped";
	/em;

my $report_path = Local::CPANSA::report_path( $hash->{distribution} );
$no_yaml_start if -e $report_path;

# If we want to redirect into an existing file, take out the YAML
# header, unless we have -s to force the header
unless( $yes_yaml_start ) {
	$string =~ s/\A---\R// if( -e $report_path or $no_yaml_start );
	}

print $string;
